[
  {
    "objectID": "posts/chatgpt-api/chatgpt-api.html",
    "href": "posts/chatgpt-api/chatgpt-api.html",
    "title": "ChatGPT API Guide",
    "section": "",
    "text": "This is a guide on how to access OpenAI’s API using python and the openai module. This guide will go over how to create an OpenAI account, how to get an API key, and how to use said key with the API.\n\nStep 1: Making an Account\nStart by going to https://platform.openai.com. In the top right corner, click the green “Sign Up” button. Either use your email to sign up or use one of the options below and follow the steps given to create your account.\n\n\n\nplatform.openai home page\n\n\n\n\nStep 2: Creating Your API Key\nTo access the OpenAI API, you need an OpenAI API key. You can the API Keys page by going to your profile from your account icon in the upper right corner. From there, select API Keys on the left sidebar. You should be on this page.\n\n\n\nAPI Keys Webpage\n\n\nYou can see my current API keys in the image. To create a new API key, click the green “Create new secret key” button in the upper right corner. Name the key whatever you want and select “Defualt project” from the Project dropdown. Then create the key.\n\n\n\nAPI Key Creation Window\n\n\nOnce the key is created, save it somewhere safe, but close by. You will never be able to access it from the website again, and we will need it to access the API.\n\n\nStep 2.5: Buying Credits\nIn order to use the API, you will need to buy credits. Each call to the API will consume a very small amount of credits until you run out and the API key stops working. To being using the API, we will need to buy $5 worth of credits. From the same page as before, select Billing on the left sidebar. You should then be on the screen below.\n\n\n\nAPI Credit Page\n\n\nSelect “Add payment details” and selevt Individual. Input your payment information. Change the initial purchase amount to $5. Uncheck the automatic recharge option and click continue. Confirm the payment. These credits will give you token that will be consumed every time you make a call to the API, so you must keep your key safe to prevent unwanted usage.\n\n\nStep 3: Setting Up the API Code\nNow, it is time to start accessing the API using python. In your IDE of choice, install the openai module using the terminal.\n\npip install openai\n\nNext, import the openai and os modules.\n\ntry:\n    from openai import OpenAI\n    import os\nexcept ImportError as err:\n    print(err)\n\nUsing the API key you created, set the environment variable.\n\nos.environ[\"OPENAI_API_KEY\"] = \"YOUR_KEY_HERE\"\n\nFinally, initialize the chatbot.\n\nclient = OpenAI(\n    api_key=os.environ.get(\"OPEN_API_KEY\")\n)\nchat_completion = client.chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"This is an example.\",\n        }\n    ],\n    model=\"gpt-4o\",\n)\nresponse = chat_completion.choices[0].message.content\nprint(response)\n\nGot it! If you have any questions or need help with something specific, feel free to let me know.\n\n\nFirst, we set the client using the api_key to gain access. Then, we set the content value in the messages list to “This is an example.” The exact response given will differ each time, but you can see that the value of the content key is equivalent to the prompt given to ChatGPt. The model variable is the name of a ChatGPT model to tell it which one to use. The higher level the model, the more tokens it will consume with each use. To learn more about all of the available models, you can go to https://platform.openai.com/docs/models. The “.choices[0].message.content” at the end will access specifically the response. The rest will likely not be relevant for you, but you can experiment with removing parts from the end to look at the rest of the output.\nWe can also use the input() function to give custom prompts. Because we have already set the API key, we will skip that step this time.\n\nprompt = input()\n\nchat_completion = client.chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": prompt,\n        }\n    ],\n    model=\"gpt-4o\",\n)\nresponse = chat_completion.choices[0].message.content\nprint(response)\n\nWhy don't skeletons fight each other? \n\nThey don't have the guts.\n\n\nIn this example, I gave the prompt “Tell me a joke” using the input function and recieved a joke in response. You can put whatever you want for your own needs. The output will be a string that can used."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "dat303-blog",
    "section": "",
    "text": "ChatGPT API Guide\n\n\n\n\n\n\nPython\n\n\n\nA guide on using the ChatGPT API.\n\n\n\n\n\nNov 28, 2024\n\n\n\n\n\n\nNo matching items"
  }
]